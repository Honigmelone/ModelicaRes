###########
modelicares
###########
   **Python utilities to analyze and plot Modelica results**

   The goal of *modelicares* is to provide open-source tools to help interpret
   the results of Modelica_ simulations and create publishable figures.  It is
   currently possible to browse the names and attributes of variables, preview
   the signals, and create figures.  The figures are generated by matplotlib_,
   which offers a rich set of plotting routines.  *modelicares* includes helper
   functions to automatically label and pre-format some types of figures, like
   xy plots (where x may be time or another variable), Bode and Nyquist plots,
   and Sankey diagrams.  The plots can be scripted or run from a Python_
   command-line interpreter.

   .. only:: html

      .. image:: _static/browse.png
         :scale: 45 %
         :alt: variable browser

      .. image:: demos/ThreeTanks.png
         :scale: 35 %
         :alt: Sankey digarams of three tanks model

      |

      .. image:: demos/ChuaCircuit.png
         :scale: 35 %
         :alt: plot of Chua circuit

      .. image:: demos/PID-nyquist.png
         :scale: 35 %
         :alt: example for modelicares.LinRes.nyquist()

      The links below describe the modules.  The main module,
      :mod:`modelicares`, has classes and methods for loading, interpreting,
      and plotting Modelica_ results in the format used by Dymola.  The
      :mod:`res` module has general supporting methods.  Finally, the
      :mod:`texunit` module has methods to translate Modelica *unit* and
      *displayUnit* strings into TeX_-formatted strings.

      **Modules:**

   .. only:: latex

      .. figure:: _static/browse.png
         :scale: 60 %

      .. figure:: demos/ChuaCircuit.pdf
         :scale: 50 %

      .. figure:: demos/ThreeTanks.pdf
         :scale: 50 %

      ..   .. figure:: demos/PID-nyquist.pdf
      ..      :scale: 40 %

      The following chapters describe the modules.  The main module,
      :mod:`modelicares`, has classes and methods for loading, interpreting,
      and plotting Modelica_ results in the format used by Dymola.  The
      :mod:`res` module suports it with general methods.  Finally, the
      :mod:`texunit` module has methods to translate Modelica_ *unit* and
      *displayUnit* strings into TeX_-formatted strings.

      .. Seealso:: The buildingspy
         (`http://simulationresearch.lbl.gov/modelica/buildingspy/
         <http://simulationresearch.lbl.gov/modelica/buildingspy/>`_) and DyMat
         (`http://www.j-raedler.de/projects/dymat/
         <http://www.j-raedler.de/projects/dymat/>`_ projects provide other
         Python_ modules that are related.

   .. toctree::

      modelicares
      res
      texunit

   .. only:: html

      .. Seealso:: The `buildingspy <http://www.j-raedler.de/projects/dymat/>`_
         and `DyMat <http://www.j-raedler.de/projects/dymat/>`_ projects provide
         other Python_ modules that are related.

      A PDF version of this documentation is available `here <modelicares.pdf>`_.

.. _Python: http://www.python.org/
.. _Modelica: http://www.modelica.org/
.. _numpy: http://numpy.scipy.org/
.. _matplotlib: http://www.matplotlib.org/
.. _python-control: http://sourceforge.net/apps/mediawiki/python-control
.. _TeX: http://www.latex-project.org/
